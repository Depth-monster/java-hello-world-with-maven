name: Build and Deploy Java App

on:
  push:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Build with Maven
      run: mvn clean package

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/java-hello-world:latest .

    - name: Push Docker image
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/java-hello-world:latest

    - name: Deploy to server via SSH
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_IP }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        script: |
          set -e
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/java-hello-world:latest

          echo "ðŸŸ¡ Pulling latest image..."
          docker pull $IMAGE

          echo "ðŸ§¹ Stopping existing container if running..."
          if docker ps -q --filter "name=app" | grep -q .; then
            docker stop app
          fi

          echo "ðŸ§½ Removing existing container if exists..."
          if docker ps -a -q --filter "name=app" | grep -q .; then
            docker rm app
          fi

          echo "âœ… Running container on port 8080..."
          docker run -d --name app -p 8080:8080 $IMAGE
